OFMT - Optical Flow for Microtubule Analysis

Lukas Lang (ll542@cam.ac.uk)
Department of Applied Mathematics and Theoretical Physics
University of Cambridge, UK.
http://www.damtp.cam.ac.uk/people/ll542/

1. Introduction

This is a MATLAB implementation as described in:

Drechsler, M. and Lang, L. F. and Dirks, H. and Burger, M. and Schönlieb, C.-B. and Palacios, I. M. Optical flow analysis reveals that Kinesin-mediated advection impacts on the orientation of microtubules, 2019.

If you use this software in your work please cite the abovementioned paper in any resulting publication.

BibTeX:

@article {DreLanDirBurSchoPal19,
	author = {Drechsler, M. and Lang, L.~F. and Dirks, H. and Burger, M. and Schönlieb, C.-B. and Palacios, I. M},
	title = {Optical flow analysis reveals that Kinesin-mediated advection impacts on the orientation of microtubules},
	year = {2019},
    % elocation-id = {XXXXXX},
	% doi = {10.XXXX/XXXXXX},
	% publisher = {Cold Spring Harbor Laboratory},
	% url = {https://www.biorxiv.org/content/early/YYYY/MM/DD/XXXXXX},
	% eprint = {https://www.biorxiv.org/content/early/YYYY/MM/DD/XXXXXX.full.pdf},
	% journal = {bioRxiv}
}

2. License & Disclaimer

Copyright 2017 Lukas Lang.

This file is part of OFMT. OFMT is free software: you can redistribute it
and/or modify it under the terms of the GNU General Public License as
published by the Free Software Foundation, either version 3 of the License,
or (at your option) any later version.

OFMT is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU General Public License for more 
details.

You should have received a copy of the GNU General Public License along
with OFMT.  If not, see <http://www.gnu.org/licenses/>.

For the full license statement see the file COPYING.

Moreover, this work incorporates source code from the colour wheel by 
Deqing Sun, Department of Computer Science, Brown University. The license 
statement can be found in the respective files.

Furthermore, this work includes source code of the packages:

Library X.
URL:

The license statements can be found in the respective folders.

3. Requirements

This software was originally written for and tested with MATLAB R2017b.

The following libraries are required for parts of this sofware:

export_fig: used for producing high quality figures from the results.
GitHub: https://github.com/altmany/export_fig
URL: http://www.mathworks.com/matlabcentral/fileexchange/23629-exportfig

>> git clone https://github.com/altmany/export_fig.git

circstat-matlab: used to compute statistics of circular quantities.
GitHub: https://github.com/circstat/circstat-matlab
URL: https://uk.mathworks.com/matlabcentral/fileexchange/10676-circular-statistics-toolbox-directional-statistics

>> git clone https://github.com/circstat/circstat-matlab.git

circHist: used to plot angular histograms.
GitHub: https://github.com/zifredder/CircHist

>> git clone https://github.com/zifredder/CircHist

flexBox: used for optical flow computation.
GitHub: https://github.com/lukaslang/flexBox.git
Version used: a4a24d0d680b3d2d8bc87869bde812e80750f745

>> git clone -recursive https://github.com/lukaslang/flexBox.git
>> cd flexBox
>> git checkout a4a24d0d680b3d2d8bc87869bde812e80750f745

motionEstimationGUI: used for large motion.
GitHub: https://github.com/HendrikMuenster/motionEstimationGUI
Version used: 15c578a12e968a46afbe8afe571060c3ccd41e71

>> git clone https://github.com/HendrikMuenster/motionEstimationGUI.git
>> cd motionEstimationGUI
>> git checkout 15c578a12e968a46afbe8afe571060c3ccd41e71

To run experiments with compiled flexBox follow these steps:

>> cd flexBox/flexBox_CPP/
>> mkdir build
>> cd build
>> cmake -DUSE_CUDA=ON -DCUDA_CUDART_LIBRARY=/usr/local/cuda/lib64/libcudart.so -DCUDA_cufft_LIBRARY=/usr/local/cuda/lib64/libcufft.so -DCUDA_cusparse_LIBRARY=/usr/local/cuda/lib64/libcusparse.so ../source/
>> make
>> make install

Tested with NVIDIA Tesla K40c run on Ubuntu 16.04.4, CUDA 8, and MATLAB 2016b.

On MacOS (High Sierra, 10.13.4) together with MATLAB 2017b you can run:

>> brew reinstall gcc --without-multilib
# See https://stackoverflow.com/a/19016410
>> sudo ln -s /opt/X11/include/X11 /usr/local/include/X11
>> cd flexBox/flexBox_CPP/
>> mkdir build
>> cd build
>> CC=gcc-8 CXX=g++-8 cmake -D Matlab_ROOT_DIR=/Applications/MATLAB_R2017b.app/ ../source/
>> make
>> make install

4. Usage

For easier use we provide a startup script (startup.m), which sets up the 
MATLAB search path. It includes required libraries and adds required 
subdirectories. Make sure to download the required packages and to set the 
library paths properly. Then simply run the startup script.

To run the test cases execute

>> runtests('test')

Note that test/readlsmTest.m requires a certain LSM file to be available 
(set via datapath.m)!

In order to run the software with real data set the path to your files
in the script:

- datapath.m.

The following run scripts are included:

- TODO add scripts.

5. Acknowledgements